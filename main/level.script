setNumbers = {}

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
  init_default_random()
	print("level init")
	local p = go.get_position()
	p.x = 256
	p.y = 256
	p.z =  0.9

--	local component = "#symbol_factory"
--	factory.create(component, p)

	local component = "#number_factory"
  local randomX = math.random(1, 70)
  local randomY = math.random(1, 70)
	-- factory.create(component, p, null, { x=randomX, y=randomY, value = hash("2") })
  table.insert(setNumbers, {x=randomX, y=randomY})
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed

end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end

function init_default_random()
  math.randomseed(os.time())
  math.random()
  math.random()
  math.random()
end