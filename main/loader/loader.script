local sound_gain = 0.45

function init(self)
	print("LOADING MAIN")
	msg.post(".", "acquire_input_focus")
	msg.post("#main_proxy", "load")
	self.loaded = "#main_proxy"
	self.muted = false
	
	msg.post("/menu", "disable")
	sound.play("go#sound", {delay = 1, gain = sound_gain, pan = 0.0, speed = 1.0})
end

function final(self)
	msg.post(".", "release_input_focus")
end

function on_input(self, action_id, action)
	if action_id == hash("main") and action.released then
		show_main(self)
	elseif action_id == hash("mute") and action.released then
		self.muted = not self.muted
		sound.set_group_gain("master", self.muted and 0.0 or sound_gain)
	elseif action_id == hash("debug") and action.released then
		msg.post("@system:", "toggle_physics_debug")
	elseif action_id == hash("tutorial") and action.released then
		show_tutorial(self)
	else 
		return false
	end

	return true
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") and self.next_level then
		msg.post(sender, "init")
		msg.post(sender, "enable")
		msg.post("loading:/level#level_script", "load_target", { level = self.next_level })
		self.next_level = nil
	elseif message_id == hash("show_level_by_name") then
		show_by_name(self, message.level)
	elseif message_id == hash("reload_page") then
		reload_page(self)
	elseif message_id == hash("next_level") then
		show_next(self)
	elseif message_id  == hash("show_tutorial") then
		show_tutorial(self)
	elseif message_id  == hash("show_main") then
		show_main(self)
	elseif message_id == hash("proxy_loaded") then
		-- New world is loaded. Init and enable it.
		print("PROXY LOADED")
		pprint(sender)
		msg.post(sender, "init")
		msg.post(sender, "enable")
		-- give focus to character cause it does not work on init
		-- msg.post(".", "release_input_focus")
	end
end

function reload_page(self)
	msg.post(self.loaded, "unload")
	msg.post(self.loaded, "load")
end

function show_by_name(self, level)
	if level == self.loaded then return end
	msg.post(level, "load")
	msg.post(self.loaded, "unload")
	self.loaded = level
end

function show_tutorial(self)
	print("SHOWING TUTORIAL")
	show_by_name(self, "#tutorial_proxy")
end

function show_main(self)
	print("SHOWING MAIN")
	show_by_name(self, "#main_proxy")
end

function show_main_level_2(self)
	print("SHOWING MAIN LEVEL 2")
	show_by_name(self, "#main_proxy_level_2")
end

function show_next(self)
	print("SHOWING NEXT")
	if self.loaded ~= "#main_proxy" then
		show_with_loading(self, "#main_proxy")
	else
		show_with_loading(self, "#main_proxy_level_2")
	end
end

function show_with_loading(self, next_level)
	show_by_name(self, "#loading")
	self.next_level = next_level
end