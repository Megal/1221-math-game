local speed = 196
local tile_size = 64
local next_move_threshold = 16
debugger = require('libs.debugger')
debugger.start()

function init(self)
    msg.post(".", "acquire_input_focus")
    self.dir = vmath.vector3()
    self.current_anim = nil
    self.move_remains = 0
    self.next_action_id = hash("none")
end

function update(self, dt)
    if vmath.length_sqr(self.dir) > 1 then
        self.dir = vmath.normalize(self.dir)
    end
    local p = go.get_position()
    local step = math.min(speed * dt, self.move_remains)
    
    go.set_position(p + self.dir * step)
    self.move_remains = self.move_remains - step

    -- animate the astronaut

    local anim = hash("idle")

    if self.dir.x > 0 then
        anim = hash("right")
    elseif self.dir.x < 0 then
        anim = hash("left")
    elseif self.dir.y > 0 then
        anim = hash("back")
    elseif self.dir.y < 0 then
        anim = hash("front")
    end

    if anim ~= self.current_anim then
        msg.post("#sprite", "play_animation", { id = anim })
        self.current_anim = anim
    end

    -- done animating
    if self.move_remains < 1e-9 then
        self.dir = vmath.vector3()
        pprint(go.get_position())
        set_next_move_if_needed(self)
    end
end

function set_next_move_if_needed(self)
    if self.next_action_id == hash("none") then return end

    pprint(self.next_action_id)
    self.move_remains = self.move_remains + tile_size
    set_move(self, self.next_action_id)
    self.next_action_id = hash("none")
end

function on_input(self, action_id, action)
    if self.move_remains > next_move_threshold then 
        return
    elseif self.move_remains > 1e-9 then 
        self.next_action_id = action_id
    else
        self.next_action_id = hash("none")        
        self.move_remains = self.move_remains + tile_size
        set_move(self, action_id)
        pprint(action)
    end
end

function set_move(self, action_id)
    if action_id == hash("front") then
        self.dir.y = -1
    elseif action_id == hash("back") then
        self.dir.y = 1
    elseif action_id == hash("left") then
        self.dir.x = -1
    elseif action_id == hash("right") then
        self.dir.x = 1
    end
end